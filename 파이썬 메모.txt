파이썬 - 게임, 웹개발, 데이터 분석

개발환경 구축
- 인터프리터 다운로드 + 에디터(파이참, vscode...)
- 아나콘다

인터프리터 : 통역
컴파일러 : 번역

1. python 3.x == jdk
2. 가상환경 구축
   - 개발하려고 하는 업무에 맞춰서 환경을 구축 => 사용하는 라이브러리가 다름

(pythonsource) D:\source\pythonsource\Scripts>
==> 가상환경 활성화


*.ipynb : 주피터 노트북 파일

주피터 노트북 : 파이썬 셀단위로 실행 편집기


python
   - 내장 DB : sqlite

spring boot - sqlite 있었음

sqlite protable 설치


자바 - maven
python - pip

pip : 파이썬 모듈이나 패키지를 쉽게 설치할 수 있도록 도와주는 도구
      가상환경 안에 설치됨
pip install 패키지명 => 설치
pip install 패키지명==1.0.4

pip install --upgrade 패키지명

pip uninstall 패키지명 => 삭제

pip list => 확인

pip install openpyxl
pip install Pillow


크롤링 - 정보수집

pip install fake-useragent
pip install lxml
pip install selenium
pip install beautifulsoup4
pip install webdriver-manager

자바스크립트 ==> json
{} => JSON.strigfy()

파이썬 ==> json
dict ==> json



naver open api
ufWHi_oYE6VVsv_4EZPI
2fzgfax8Z8

구글
1) 코랩 검색
2) New NoteBook

pandas
numpy
matplotlib

==> 패키지 설치 필요 없음

pandas(판다스)
- 데이터 종류
   1. 시리즈
   2. 데이터프레임(시리즈 모임)

- 조회 / 삽입 / 삭제
- subset 추출
   1) 행 단위
      head(), tail(), sample()
   2) 열 단위



장고 프로젝트

django(python) == spring boot

config : 다른 폴더명 사용 가능
~~~\myapp1> django-admin startproject config .
          > python manage.py startapp 앱이름
          > python manage.py migrate (데이터베이스 변경사항 적용)

          > python manage.py runserver
          > python manage.py createsuperuser (어드민 계정 활성화)

          > Model 정의 + 수정
          > python manage.py makemigrations (데이터베이스 변경)
          > python manage.py migrate (데이터베이스 변경사항 적용)

          > python manage.py sqlmigrate 앱이름 번호

          > python manage.py shell : 파이썬 코드를 한단계씩 실행할 수 있게 함 

sql 쿼리문 대체
select * from person; == Person.objects.all()

insert into values(); == person = Person() => person.save()
                         Person.objects.create(first_name='park', last_name='jiho')

get 으로 하는경우 오류가 발생하고 filter 를 사용하면 빈값을 준다
select * from person where first_name='park'; == Person.objects.get(first_name='park')
                                              == Person.objects.filter(first_name='park')
                                              == Person.objects.get(id=5)
                                              == Person.objects.filter(first_name__contains='pa')
                                              == Person.objects.filter(first_name__icontains='PA')


스프링 MVC 패턴 : Model(Database), View(화면단-jsp, 템플릿 html), Controller(Controller + Service)
- url : controller 위에 경로지정


장고 MTV 패턴 : Model(Database), Templates(html), View(View)
- urls.py : 사용하는 url 정의
   1) config / urls.py
   2) 각 앱 / urls.py


db : ORM

프로젝트 아래에 db 가 생성됨
내장DB 연동